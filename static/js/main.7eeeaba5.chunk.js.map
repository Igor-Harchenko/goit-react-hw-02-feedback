{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","s","protoType","PropTypes","string","FeedbackOptions","options","onLeaveFeedback","map","e","type","onClick","array","func","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","feedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","keys","Object","React","Component","defaultProps","goodValue","neutralValue","badValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,KAKPF,EAAQK,UAAY,CAClBJ,MAAOK,IAAUC,QAGJP,QCZTQ,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKP,UAAU,qBAAf,SAEGM,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,KAAK,SACLV,UAAU,gBAEVW,QAAS,kBAAMJ,EAAgBE,IAJjC,SAMCA,GAHK,kBAWdJ,EAAgBH,UAAY,CAC1BI,QAASH,IAAUS,MACnBL,gBAAiBJ,IAAUU,MAGdR,QCjBAS,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OAAO,mBAAGf,UAAU,wBAAb,SAAsCe,KCiClCC,EAlCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qBAAKrB,UAAU,uBAAf,SACI,qBAAIA,UAAU,iBAAd,UACI,oBAAIA,UAAU,iBAAd,SACI,uBAAMA,UAAU,kBAAhB,mBACOiB,OAEX,oBAAIjB,UAAU,iBAAd,SACI,uBAAMA,UAAU,kBAAhB,sBACUkB,OAGd,oBAAIlB,UAAU,iBAAd,SACI,uBAAMA,UAAU,kBAAhB,kBACMmB,OAEV,6BACI,uBAAMnB,UAAU,kBAAhB,oBACQoB,OAEZ,6BACI,uBAAMpB,UAAU,kBAAhB,gCACoBqB,EADpB,eClBVC,E,4MAOJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,gBAAkB,SAAAiB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,EAItCG,mBAAqB,WACnB,OAAO,EAAKJ,MAAMN,KAAO,EAAKM,MAAMJ,IAAM,EAAKI,MAAML,S,EAGvDU,gCAAkC,WAChC,OACEC,KAAKC,MAAO,EAAKP,MAAMN,KAAO,EAAKU,qBAAwB,KAAQ,I,4CAIvE,WACE,MAA+BI,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBa,EAAOC,OAAOD,KAAKD,KAAKR,OAE9B,OAEE,sBAAKvB,UAAU,WAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEQ,QAAS0B,EACTzB,gBAAiBwB,KAAKxB,oBAIzBU,GAAQC,GAAWC,EAAM,EACxB,cAAC,EAAD,CAASrB,MAAM,aAAf,SACE,cAAC,EAAD,CACAmB,KAAMc,KAAKR,MAAMN,KACjBC,QAASa,KAAKR,MAAML,QACpBC,IAAKY,KAAKR,MAAMJ,IAChBC,MAAOW,KAAKJ,qBACZN,mBAAoBU,KAAKH,sCAI3B,cAAC,EAAD,CAAcb,QAAQ,6B,GAvDdmB,IAAMC,WAAlBb,EACGc,aAAe,CACpBC,UAAW,EACXC,aAAc,EACdC,SAAU,GA0DCjB,QC9DfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7eeeaba5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.protoType = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;","import PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className=\"Feedback__list-btn\">\n    \n    {options.map(e => {\n      return (\n        <button\n          type=\"button\"\n          className=\"Feedback__btn\"\n          key=\"element\"\n          onClick={() => onLeaveFeedback(e)}\n        >\n        {e}  \n        </button>\n      )\n    })}\n  </div>\n);\n\n\nFeedbackOptions.protoType = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n    return <p className=\"Notification__message\">{message}</p>\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => (\r\n    <div className=\"Feedback__statistics\">\r\n        <ul className=\"Feedback__list\">\r\n            <li className=\"Feedback__item\">\r\n                <span className=\"Feedback__value\">\r\n                Good: {good}</span>\r\n            </li>\r\n            <li className=\"Feedback__item\">\r\n                <span className=\"Feedback__value\">\r\n                Neutral: {neutral}\r\n            </span>\r\n            </li>\r\n            <li className=\"Feedback__item\">\r\n                <span className=\"Feedback__value\">\r\n                Bad: {bad}</span>\r\n            </li>\r\n            <li>\r\n                <span className=\"Feedback__value\">\r\n                Total: {total}</span>\r\n            </li>\r\n            <li>\r\n                <span className=\"Feedback__value\">\r\n                Positive feedback: {positivePercentage}%</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends React.Component {\n  static defaultProps = {\n    goodValue: 0,\n    neutralValue: 0,\n    badValue: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  }\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      Math.round((this.state.good / this.countTotalFeedback()) * 1000) / 10\n    );\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const keys = Object.keys(this.state);\n    \n    return (\n\n      <div className=\"Feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        {good || neutral || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics \n            good={this.state.good} \n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n           ) : (\n          <Notification message=\"No feedback given\"/>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}